@model MilkWayIndia.Models.ProductAssignVM
@{
    Layout = "~/Views/Shared/_MyLayout.cshtml";
}
@section contain
{
    <script src="~/Content/plugins/jQuery/jquery-2.2.3.min.js"></script>
    <script src="~/scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Content/toastr/toastr.min.js"></script>
    <link href="~/Content/toastr/toastr.min.css" rel="stylesheet" />
    <script>
        $(document).ready(function () {
            var MasterClass = document.getElementById("LiProduct");
            if (MasterClass != null) {
                MasterClass.className = MasterClass.className + " active";
            }
        });
    </script>
    <script>
        $(function () {
            $(".select2").select2();
        });
    </script>
    <section class="content-header">
        <div class="box-header with-border">
            <h3 class="box-title">Assign Attribute For <b>@ViewBag.ProductName</b></h3>
        </div>
    </section>
    <section class="content">
        <div class="row">
            <div class="col-xs-12">
                <div class="box box-primary">
                    @using (Ajax.BeginForm("AssignProduct", "Attribute", FormMethod.Post, new AjaxOptions { OnSuccess = "SuccessAssign" }, new { @id = "frmAssign" }))
                    {
                        @Html.HiddenFor(model => model.ProductID)
                        @Html.HiddenFor(model => model.ParentcatId, new { @class = "form-control", @id = "ParenCatId" })
                        @Html.HiddenFor(model => model.SubcatId, new { @class = "form-control", @id = "SubCatCatId" })
                        <div class="box-body">
                            <div class="row">
                                <div class="col-md-4">


                                    @*<div class="form-group has-feedback">
                                            <label>Vendor</label>
                                            <select id="ddlVendor" name="ddlVendor" class="form-control select2">
                                                <option value="0">---Select---</option>
                                                @if (ViewBag.Vendor != null)
                                                {
                                                    foreach (System.Data.DataRow drStaffName in ViewBag.Vendor.Rows)
                                                    {
                                                        <option value="@drStaffName["Id"]">@drStaffName["FirstName"] @drStaffName["LastName"]</option>
                                                    }
                                                }
                                            </select>
                                            @if (ViewBag.VendorId != null)
                                            {
                                                <script>
                                                    document.getElementById('ddlVendor').value = '@ViewBag.VendorId';
                                                </script>
                                            }
                                        </div>*@
                                    <div class="form-group">
                                        <label>Vendor List</label>
                                        <div id="div_sectors" class="scrollbox" style="height:100px;overflow-y:auto; ">

                                        </div>
                                    </div>
                                    @*onclick="addcheckbox()"*@
                                    <div class="form-group">
                                        @Html.TextBox("txtSectorid", "", new { @class = "form-control", @readonly = "readonly", style = "color:red; " })
                                        <button type="button" id="btnSubmit" class="btn btn-primary btn1" value="">View Sector</button>
                                    </div>
                                    <div class="form-group">
                                        @Html.TextBox("txtSectorid1", "", new { @class = "form-control", @readonly = "readonly", style = "color:red; " })
                                        <div id="div_products">

                                        </div>
                                        @*@Html.Partial("AssignVendorSectorPartial")*@
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Attribute</label>
                                        @Html.DropDownListFor(model => model.AttributeID, ViewBag.lstAttribute as SelectList, new { @class = "form-control" })
                                    </div>
                                    <div class="form-group">
                                        <label>MRP Price</label>
                                        @Html.TextBoxFor(model => model.MRPPrice, new { @class = "form-control required", onchange = "CalculateSaleAmt();", onkeypress = "return ValidateNumber(event);" })
                                    </div>
                                    <div class="form-group">
                                        <label>Purchase Price</label>
                                        @Html.TextBoxFor(model => model.PurchasePrice, new { @class = "form-control required", onchange = "CalculateSaleAmt();", onkeypress = "return ValidateNumber(event);" })
                                    </div>
                                    <div class="form-group">
                                        <label>Discount Price</label>
                                        @Html.TextBoxFor(model => model.DiscountPrice, new { @class = "form-control required", onchange = "CalculateSaleAmt();", onkeypress = "return ValidateNumber(event);" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>CGST (%)</label>
                                        @Html.TextBoxFor(model => model.CGST, new { @class = "form-control required", onchange = "CalculateSaleAmt();", onkeypress = "return ValidateNumber(event);" })
                                    </div>
                                    <div class="form-group">
                                        <label>SGST (%)</label>
                                        @Html.TextBoxFor(model => model.SGST, new { @class = "form-control required", onchange = "CalculateSaleAmt();", onkeypress = "return ValidateNumber(event);" })
                                    </div>
                                    <div class="form-group">
                                        <label>IGST (%)</label>
                                        @Html.TextBoxFor(model => model.IGST, new { @class = "form-control required", onchange = "CalculateSaleAmt();", onkeypress = "return ValidateNumber(event);" })
                                    </div>
                                    <div class="form-group">
                                        <label>Profit/Margin</label>
                                        @Html.TextBoxFor(model => model.Profit, new { @class = "form-control required", onkeypress = "return ValidateNumber(event);" })
                                    </div>
                                    <div class="form-group">
                                        <label>B2C Sell Price</label>
                                        @Html.TextBoxFor(model => model.SellPrice, new { @class = "form-control required", onchange = "CalculateSaleAmt();", onkeypress = "return ValidateNumber(event);" })
                                    </div>
                                    <div class="form-group">
                                        <label>B2B Profit margin</label>
                                        @Html.TextBoxFor(model => model.B2BProfit, new { @class = "form-control required", onchange = "CalculateSaleAmt();", onkeypress = "return ValidateNumber(event);" })
                                    </div>

                                    <div class="form-group">
                                        <label>B2B Sale Price</label>
                                        @Html.TextBoxFor(model => model.B2BSellPrice, new { @class = "form-control required", onchange = "CalculateSaleAmt();", onkeypress = "return ValidateNumber(event);" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="box-footer text-right">
                            @*onclick="return ValidProduct();"*@
                            <input type="submit" value="Save" class="btn btn-primary" onclick="return ValidProduct();">
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12">
                <div class="box-title">
                    <h4> Product List</h4>
                </div>
                <div class="box box-primary">
                    <div id="div_product" class="box-body table-responsive">

                    </div>
                </div>
            </div>
        </div>
    </section>
    <div class="loaderbody" id="loaderbody">
        <div class="loader"></div>
    </div>
    @*<div class="modal fade" id="model_attribute" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    </div>*@

    <script>

        function ValidProduct() {
            var status = true;
            var sector = document.getElementById("txtSectorid1").value;
            if (sector == "") {
                alert("Enable Sector First");
                status = false;
            }
            return status;
        }

        $(function () {
            GetProductAttribute();
            var url = '/report/FetchVendorList';
            var div_sectors = $('#div_sectors');
            /*$('#ddlVendor').change(function ()*/
            $(document).ready(function () {
                //var selectedVendor = $(this).val();
                var parentcatid = document.getElementById("ParenCatId").value;
                // alert(parentcatid);
                var selectedVendor = parentcatid;
                //alert(selectedVendor);
                if (!selectedVendor) {
                    div_sectors.empty();
                    return;
                }
                if (selectedVendor > 0) {
                    $.get(url, { id: selectedVendor }, function (data) {
                        div_sectors.html(data);
                    })
                }
                else {
                    div_sectors.empty();
                }


                // var pid = document.getElementById("ParenCatId").value;

                //alert(pid);

                //// var ProductID = $('#ProductID').val();
                //$.get("/Attribute/GetProductList?ProductID=" + pid , function (data) {
                //    $('#div_product').html(data);
                //});


                $(document).on("click", ".btn1", function () {

                    var c = this.value;


                    var d = document.getElementById("txtSectorid").value;
                    //alert(d);
                    var checkboxes = document.querySelectorAll('input[name="chkSector[]"]:checked');
                    let count = 0;
                    //alert("c");
                    var ch = "";
                    for (var checkbox of checkboxes) {
                        //document.getElementById("txtproid").append(checkbox.value + ' ');

                        let text = document.getElementById("txtSectorid").value;
                        let result = text.includes(checkbox.value);

                        //alert(result);
                        count = count + 1;
                        //alert(checkbox.value);
                        //if (result == false) {
                        if (ch == "") {
                            ch = checkbox.value;

                        }
                        else {
                            ch = ch + "," + checkbox.value;
                        }




                    }

                    // alert(ch);
                    document.getElementById("txtSectorid").value = ch;


                    $.get('/Attribute/GetSectorListMsgWise', { cH: ch }, function (data) {
                        $('#div_products').html(data);
                    })
                });



            });
        });



        //$("body").on("click", ".btn-bootstrap-dialog", function () {
        //    var url = $(this).data('url');
        //    $.get(url, function (data) {
        //        $('#model_attribute').html(data);
        //        $('#model_attribute').modal('show');
        //    });
        //    return false;
        //});

        function CalculateSaleAmt() {
            if (document.getElementById("MRPPrice").value == "")
                document.getElementById("MRPPrice").value = "0";
            if (document.getElementById("PurchasePrice").value == "")
                document.getElementById("PurchasePrice").value = "0";
            if (document.getElementById("DiscountPrice").value == "")
                document.getElementById("DiscountPrice").value = "0";
            if (document.getElementById("IGST").value == "")
                document.getElementById("IGST").value = "0";

            var MRP = document.getElementById("MRPPrice").value;
            var Purchase = document.getElementById("PurchasePrice").value;
            var discount = document.getElementById("DiscountPrice").value;
            var price = (parseFloat(MRP) - parseFloat(Purchase)) - parseFloat(discount);
            var TotalPrice = parseFloat(Purchase) + parseFloat(price);

            var igst = document.getElementById("IGST").value;
            var cgst = document.getElementById("CGST").value;
            var gst = parseFloat(igst) + parseFloat(cgst);
            //var gstprice = (parseFloat(TotalPrice) * parseFloat(igst)) / 100;
            var gstprice = (parseFloat(TotalPrice) * parseFloat(gst)) / 100;
            var profit = parseFloat(price) - parseFloat(gstprice);
            document.getElementById("Profit").value = profit;

            var saleprice = parseFloat(profit) + parseFloat(gstprice) + parseFloat(Purchase);
            document.getElementById("SellPrice").value = saleprice;
        }

        function ValidProduct() {
            var status = true;
            var hdsector = 0;
            $('.scrollbox').removeClass('field-error');
            $('div,select,span').removeClass('field-error');
            $('#div_sectors').find('input[type="checkbox"]').each(function () {
                if ($(this).is(":checked")) {
                    hdsector = 1;
                }
                else {
                    hdsector = 0;
                }
            });
            if (hdsector == 0) {
                $('.scrollbox').addClass('field-error');
            }
            //var vendor = $('#frmAssign #ddlVendor').val();
            //if (vendor == "0" || vendor == null || vendor == "") {
            //    $('#frmAssign #ddlVendor').parent().find('.select2').addClass('field-error');
            //    status = false;
            //}
            $('#frmAssign .required').each(function () {
                var value = $(this).val();
                if (value == null || value == "") {
                    $(this).parent().parent().addClass('has-error');
                    status = false;
                }
            });


            return status;
        }

        function GetProductAttribute() {
            var ProductID = $('#ProductID').val();
            $.get("/Attribute/GetProductList?ProductID=" + ProductID, function (data) {
                $('#div_product').html(data);
            });
        }
        function GetEditAttribute(id) {

            //var id = model.Id; //if you want to pass an Id parameter
          window.location.href = '@Url.Action("EditAttribute", "Attribute")/' + id;
        }


        function SuccessAssign(data) {
            if (data.status = "1") {
                toastr["success"]("Product Add Successfully...");
                //var div_sectors = $('#div_sectors');
                //$("#ddlVendor").select2("val", "0");
                //div_sectors.empty();

                var url = '/report/FetchVendorList';
                var div_sectors = $('#div_sectors');


                var parentcatid = document.getElementById("ParenCatId").value;

                var selectedVendor = parentcatid;

                if (!selectedVendor) {
                    div_sectors.empty();
                    return;
                }
                if (selectedVendor > 0) {
                    $.get(url, { id: selectedVendor }, function (data) {
                        div_sectors.html(data);
                    })
                }
                else {
                    div_sectors.empty();
                }
                

                GetProductAttribute();
            }
            else {
                toastr["error"]("error");
            }
        }
    </script>
    <script type="text/javascript" src="https://code.jquery.com/jquery-1.10.1.js"></script>
    <script>

        function addcheckbox() {
            alert("a");
            // document.getElementById("txtproid").value = "";
            var d = document.getElementById("txtSectorid").value;
            alert(d);
            var checkboxes = document.querySelectorAll('input[name="chkSector[]"]:checked');
            let count = 0;
            alert("c");
            var ch = "";
            for (var checkbox of checkboxes) {
                //document.getElementById("txtproid").append(checkbox.value + ' ');

                let text = document.getElementById("txtSectorid").value;
                let result = text.includes(checkbox.value);

                //alert(result);
                count = count + 1;
                //alert(checkbox.value);
                //if (result == false) {
                if (ch == "") {
                    ch = checkbox.value;

                }
                else {
                    ch = ch + "," + checkbox.value;
                }




            }

            // alert(ch);
            document.getElementById("txtSectorid").value = ch;
            // alert(count);


        }






        function addcheckbox1(a) {
            var b = a;
            var c = b;
            //alert("yes");
            //  var d = document.getElementById("txtproid").value;
            var mystring, myNewString;
            var checkboxes = document.querySelectorAll('input[name="chkpro"]:checked');
            let count = 0;

            var ch = "";
            for (var checkbox of checkboxes) {


              
                count = count + 1;

                if (ch == "") {
                    ch = checkbox.value;

                }
                else {
                    ch = ch + "," + checkbox.value;
                }

                var arr = $.unique(ch.split(','));
                ch = arr.join(",");

            }

           

           
            //alert(ch);


            var arr = ch.split(",");
            var unique = [];
            $.each(arr, function (index, word) {
                if ($.inArray(word, unique) === -1)
                    unique.push(word);

            });

           // alert(unique);

            document.getElementById("txtSectorid1").value = unique;

        }
    </script>
}






